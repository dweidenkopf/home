#!/usr/bin/env bash
#
# This script is run after receive-pack has accepted a pack and the
# repository has been updated.  It is passed arguments in through stdin
# in the form
#  <oldrev> <newrev> <refname>
# For example:
#  aa453216d1b3e49e7f6f98441fa56946ddcd6a20 68f7abf4e6f922807889f52bc043ecd31b79f814 refs/heads/master
#
# see contrib/hooks/ for an sample, or uncomment the next line (on debian)
#

set -e

let max=1024*1024
count=0
echo ""
echo "Checking file sizes..."
while read oldrev newrev refname
do
#	echo $oldrev $newrev $refname
    # skip the size check for tag refs
    if [[ ${refname} =~ ^refs/tags/* ]]
	then
		continue
	fi
	
	if [[ ${newrev} =~ ^[0]+$ ]]
	then
		continue
	fi

	# find all refs we don't care about and exclude them from diff
	if [[ ! ${oldrev} =~ ^[0]+$ ]]
	then
		excludes=^${oldrev}
	else
		excludes=( $(git for-each-ref --format '^%(refname:short)' refs/heads/*) )
	fi
#	echo "excludes " ${excludes}
	commits=$(git rev-list $newrev "${excludes[@]}")
	for commit in ${commits};
	do
#		echo "commit " ${commit}
		# get a list of the file changes in this commit
		rawdiff=$(git diff-tree --no-commit-id -r ${commit})
		while read oldmode newmode oldsha newsha code fname
		do
#			echo "reading " ${oldmode} ${newmode} ${oldsha} ${newsha} ${code} ${fname}
			# if diff-tree returns anything, new sha is not all 0's, and it is a file (blob)
			if [[ "${newsha}" != "" ]] && [[ ! ${newsha} =~ ^[0]+$ ]] && [[ $(git cat-file -t ${newsha}) == "blob" ]]
			then
				echo -n "${fname} "
				newsize=$(git cat-file -s ${newsha})
				if (( ${newsize} > ${max} ))
				then
					echo " size ${newsize}B > ${max}B"
					let "count+=1"
				else
					echo "ok"
				fi
			fi
		done <<< "${rawdiff}"
	done
done

echo ""
exit ${count}

